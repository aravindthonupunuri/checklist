services:
  backpackregistrychecklistspostgres:
    image: 'postgres:11.5'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=grws
    ports:
      - '5432:5432'
  zookeeper:
    image: 'wurstmeister/zookeeper:3.4.6'
    ports:
      - '2181:2181'
  kafka:
    image: 'wurstmeister/kafka:2.12-2.3.0'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISE_HOST_PORT=9092
      - 'KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181'
      - 'KAFKA_CREATE_TOPICS=lists-msg-bus:1:1,lists-dlq:1:1'
pipeline:
  restore_cache:
    image: 'docker.target.com/drone/drone-s3-cache:2'
    pull: true
    restore: true
    secrets:
      - cache_s3_server
      - cache_s3_access_key
      - cache_s3_secret_key
      - cache_s3_ca_cert

  publish-config-backpack-registrychecklists-dev:
    when:
      event: [push]
      branch: master
    image: 'docker.target.com/app/lists/alpine-bash-curl-ssl:1.0.5'
    environment:
      CICD_MODE: 'true'
    secrets:
      - TAP_API_TOKEN
      - backpackregistrychecklists_app_private_key_dev
      - backpackregistrychecklistsconsumer_app_private_key_dev
    commands:
      - 'tap_api_token=$TAP_API_TOKEN app_private_key=$BACKPACKREGISTRYCHECKLISTS_APP_PRIVATE_KEY_DEV ./backpack-registrychecklists-app/scripts/config_deploy_manager.sh conf.dev.0.0'
      - 'tap_api_token=$TAP_API_TOKEN app_private_key=$BACKPACKREGISTRYCHECKLISTSCONSUMER_APP_PRIVATE_KEY_DEV ./backpack-registrychecklists-consumer-app/scripts/config_deploy_manager.sh conf.dev.0.0'

  publish-config-backpack-registrychecklists-stage:
    when:
      event: tag
      ref: 'refs/tags/conf.stage.registrychecklists.*'
      branch: master
    image: 'docker.target.com/app/lists/alpine-bash-curl-ssl:1.0.5'
    environment:
      CICD_MODE: 'true'
    secrets:
      - TAP_API_TOKEN
      - backpack_registrychecklists_app_private_key_stage
      - backpack_registrychecklists_consumer_app_private_key_stage
    commands:
      - 'tap_api_token=$TAP_API_TOKEN app_private_key=$BACKPACK_REGISTRYCHECKLISTS_APP_PRIVATE_KEY_STAGE ./backpack-registrychecklists-app/scripts/config_deploy_manager.sh ${DRONE_TAG}'
      - 'tap_api_token=$TAP_API_TOKEN app_private_key=$BACKPACK_REGISTRYCHECKLISTS_CONSUMER_APP_PRIVATE_KEY_STAGE ./backpack-registrychecklists-consumer-app/scripts/config_deploy_manager.sh ${DRONE_TAG}'

  build:
    when:
      event: [pull_request, push, tag]
    image: 'docker.target.com/tap/alpine-openjdk11-build:latest'
    environment:
      JAVA_TOOL_OPTIONS: '-Xmx4000M'
      GRADLE_USER_HOME: .gradle
      GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=1 -Dorg.gradle.parallel=false'
      JDBC_URL: 'jdbc:postgresql://backpackregistrychecklistspostgres:5432/grws'
      KAFKA_BOOTSTRAP_SERVERS: 'kafka:9092'
    commands:
      - 'mkdir -p masterspec'
      - 'git clone https://git.target.com/Registry-Modernization/backpack-registrychecklists --branch master --single-branch masterspec'
      - 'export GIT_MASTER_SPEC_PATH=`pwd`/masterspec'
      - './gradlew build distTar'

  rebuild_cache:
    image: 'docker.target.com/drone/drone-s3-cache:2'
    rebuild: true
    secrets:
      - cache_s3_server
      - cache_s3_access_key
      - cache_s3_secret_key
      - cache_s3_ca_cert
    mount:
      - .gradle

  flush_cache:
    image: 'docker.target.com/drone/drone-s3-cache:2'
    secrets:
      - cache_s3_server
      - cache_s3_access_key
      - cache_s3_secret_key
      - cache_s3_ca_cert
    flush: true
    flush_age: 14

  publish-docker-backpack-registrychecklists-app-dev:
    image: plugins/docker
    group: devimggroup
    registry: docker.target.com
    repo: docker.target.com/app/backpack-registrychecklists/backpack-registrychecklists-app
    dockerfile: ./backpack-registrychecklists-app/Dockerfile
    tags:
      - 'b${DRONE_BUILD_NUMBER}-${DRONE_COMMIT:0:8}'
      - latest
    when:
      event: [push]
      branch: master
    secrets:
      - {source: artifactory_username, target: plugin_username}
      - {source: artifactory_password, target: plugin_password}

  publish-docker-backpack-registrychecklists-app-stage:
    image: 'plugins/docker:latest'
    group: stgimggroup
    registry: docker.target.com
    repo: docker.target.com/app/backpack-registrychecklists/backpack-registrychecklists-app
    dockerfile: ./backpack-registrychecklists-app/Dockerfile
    tags: 'rc.${DRONE_TAG:28}'
    when:
      event: tag
      branch: master
      ref: 'refs/tags/conf.stage.backpackregistrychecklists.*'
    secrets:
      - {source: artifactory_username, target: plugin_username}
      - {source: artifactory_password, target: plugin_password}

  publish-docker-backpack-registrychecklists-consumer-app-dev:
    image: plugins/docker
    environment:
      CICD_MODE: 'true'
    group: devimggroup
    registry: docker.target.com
    repo: docker.target.com/app/backpack-registrychecklists/backpack-registrychecklists-consumer-app
    dockerfile: ./backpack-registrychecklists-consumer-app/Dockerfile
    tags:
      - 'b${DRONE_BUILD_NUMBER}-${DRONE_COMMIT:0:8}'
      - latest
    when:
      event: [push]
      branch: master
    secrets:
      - {source: artifactory_username, target: plugin_username}
      - {source: artifactory_password, target: plugin_password}

  publish-docker-backpack-registrychecklists-consumer-app-stage:
    image: 'plugins/docker:latest'
    environment:
      CICD_MODE: 'true'
    group: stgimggroup
    registry: docker.target.com
    repo: docker.target.com/app/backpack-registrychecklists/backpack-registrychecklists-consumer-app
    dockerfile: ./backpack-registrychecklists-consumer-app/Dockerfile
    tags: 'rc.${DRONE_TAG:28}'
    when:
      event: tag
      branch: master
      ref: 'refs/tags/conf.stage.backpackregistrychecklists.*'
    secrets:
      - {source: artifactory_username, target: plugin_username}
      - {source: artifactory_password, target: plugin_password}

  publish-client:
    when:
      event: tag
      branch: master
      ref: 'refs/tags/client.*'
    image: 'docker.target.com/tap/alpine-openjdk11-build:latest'
    environment:
      JAVA_TOOL_OPTIONS: '-Xmx4000M'
      GRADLE_USER_HOME: .gradle
      GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=1 -Dorg.gradle.parallel=false'
      JDBC_URL: 'jdbc:postgresql://backpackregistrychecklistspostgres:5432/grws'
      KAFKA_BOOTSTRAP_SERVERS: 'kafka:9092'
    commands:
      - ./gradlew publish -DUSERNAME=$ARTIFACTORY_USERNAME -DPASSWORD=$ARTIFACTORY_PASSWORD -DVERSION="${DRONE_TAG:7}"
    secrets: [ ARTIFACTORY_USERNAME, ARTIFACTORY_PASSWORD ]

secrets:
  cache_s3_server:
    path: secret/shared/drone/prod-secrets/cache_s3_server
  cache_s3_access_key:
    path: secret/shared/drone/prod-secrets/cache_s3_access_key
  cache_s3_secret_key:
    path: secret/shared/drone/prod-secrets/cache_s3_secret_key
  cache_s3_ca_cert:
    path: secret/shared/drone/prod-secrets/cache_s3_ca_cert
  backpackregistrychecklists_app_private_key_dev:
    path: secret/repo/Registry-Modernization/backpack-registrychecklists/backpackregistrychecklists-privkey-dev
  backpack_registry_app_private_key_stage:
    path: secret/repo/Registry-Modernization/backpack-registrychecklists/backpackregistrychecklists-privkey-stage
  backpackregistrychecklistsconsumer_app_private_key_dev:
    path: secret/repo/Registry-Modernization/backpack-registrychecklists/backpackregistrychecklistsconsumer-privkey-dev
  backpack_registry_consumer_app_private_key_stage:
    path: secret/repo/Registry-Modernization/backpack-registrychecklists/backpackregistrychecklistsconsumer-privkey-stage
