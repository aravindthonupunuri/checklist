micronaut:
  application:
    name: backpack-registrychecklists-app
  server:
    host: localhost
    port: 8080
    idle-timeout: 2000ms
  http:
    client.connect-ttl: 30m
    client.pool.acquire-timeout: 2000ms
    services:
      carts-api:
        urls:
          - "https://stgapi-internal.target.com"
        connect-timeout: 300ms
        read-timeout: 1000ms
        pool:
          enabled: true
          max-connections: 128
          max-pending-acquires: 50
      redsky-api:
        urls:
          - "https://redsky-stage.perf.target.com"
        connect-timeout: 1500ms
        read-timeout: 1500ms
        pool:
          enabled: true
          max-connections: 128
          max-pending-acquires: 50
  metrics:
    binders:
      web:
        enabled: false # we are using our own binder via our custom micronaut-metrics lib
lists:
  metrics:
    binders:
      http:
        enabled: true # we are using our own binder via our custom micronaut-metrics lib

jdbc-stmt-timeout:
  serverStatementTimeoutMillis: 250  # for server side statement timeout
  statementQueryTimeoutSeconds: 1    # for client side statement timeout

jackson:
  property-naming-strategy: "SNAKE_CASE"

kafka:
  consumers:
    lists-msg-bus-kafkapp-consumer:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
    lists-dlq-kafkapp-consumer:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
  producers:
    # default is a Jackson based JSON serializer for key/value
    lists-msg-bus-producer:
      retries: 3
      retry:
        backoff:
          ms: 1_000
      max:
        in:
          flight:
            requests:
              per:
                connection: 1
        block:
          ms: 2_000
  embedded:
    enabled: false

filter:
  server:
    order:
      lists-brave-tracing-server-filter: 100
      lists-traceid-filter: 101
      list-authorization-filter: 200
      registry-channel-subchannel-filter: 400
  client:
    order:
      lists-brave-tracing-client-filter: 900
      resilience-client-filter: 800
      oauth-filter: 701
      oauth-key-filter: 700
api-key: "testkey"
logging:
  mdc:
    enabled: true
    keys:
      - test
resilience4j:
  circuitbreaker:
    failure-rate-threshold: 50            # failure rate threshold in percentage (default: 50)
    wait-duration-secs-in-open-state: 10  # time cb waits before transitioning from open to half-open (default: 60s)
    sliding-window-type: TIME_BASED       # possible values TIME_BASED or COUNT_BASED (default: COUNT_BASED)
    sliding-window-size: 100               # seconds for TIME_BASED, request-count for COUNT_BASED (default: 100)
    minimum-number-of-calls: 10            # min calls required (per sliding window period) before cb calculates error rate (default: 10)
    permitted-number-of-calls-in-half-open-state: 10  # min calls permitted when circuit breaker is half open
tracing:
  zipkin:
    enabled: true
    excluded-paths: /health
    sampler:
      probability: 1
    http:
      url: http://localhost:9411/zipkin
cart:
  client:
    refresh-cycle-sec: 999999999
list:
  list-type: SHOPPING
  max-count: 50
  max-pending-item-count: 100
  max-completed-items-count: 100
  abandon-after-duration-in-days: 730 # It is two years duration
  redsky-batch-size: 28
  features.two-carts: true
  features.dedupe: true
  features.sort-position: true
  features.fixed-default-list: false
components:
  server:
    list-authorization-filter:
      enabled: false
    sanitizing-filter:
      enabled: false
    registry-channel-subchannel-filter:
      enabled: false
msgbus:
  source: backpack-registrychecklists
  dlq-source: backpackregistrychecklists-dlq
  kafka:
    consumer:
      enabled: true
    producer:
      enabled: true
    dlqconsumer:
      enabled: true
    dlqproducer:
      enabled: true
    topic: lists-msg-bus
    consumer-group: lists-msg-bus-kafkapp-consumer
    consumer-batch-size: 10
    dlq-topic: lists-dlq
    dlq-consumer-group: lists-dlq-kafkapp-consumer
    dlq-event-retry-interval-secs: 1
    dlq-max-event-retry-count: 3
    dlq-consumer-batch-size: 10
mockfilter:
  paths: /zipkin,/testserver/auth/oauth/v2/token,/

kafka-sources:
  allow:
    -
