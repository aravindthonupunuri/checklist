micronaut:
  application:
    name: backpack-registrychecklists-app
  server:
    port: ${server-port:32000}
    netty:
      max-header-size: 16384 # Handling RequestTooLarge headers - Default value (8192)
  http:
    client.connect-ttl: 30m
    client.pool.acquire-timeout: 2000ms
    services:
      redsky-api:
        urls:
          - "https://redsky-stage.perf.target.com"
        pool:
          enabled: false
      backpack-registry-api:
        urls:
          - "https://backpackregistry.dev.target.com"
        pool:
          enabled: false
  metrics:
    binders:
      web:
        enabled: false # we are using our own binder via our custom micronaut-metrics lib
lists:
  metrics:
    binders:
      http:
        enabled: true # we are using our own binder via our custom micronaut-metrics lib

datasources: # hikari
  default:
    poolName: backpackregistryapiapp    # default autogenerated
    maximumPoolSize: 10       # default 10
    minimumIdle: 5           #default same as maximumPoolSize, valid if minimumIdle < maximumPoolSize
    idleTimeout: 600000       # default 600000ms (10min)
    maxLifetime: 1800000      # default 1800000ms (30min), should be shorter than any database imposed connection time limit
    connectionTimeout: 10000  # default: 30000ms (30 seconds)

jdbc-stmt:
  serverStatementTimeoutMillis: 200  # for server side statement timeout
  statementQueryTimeoutSeconds: 1    # for client side statement timeout

jackson:
  property-naming-strategy: "SNAKE_CASE"

api-key: "testkey"

filter:
  server:
    order:
      mdc-filter: 50
      onbehalf-filter: 51
      lists-brave-tracing-server-filter: 100
      list-authorization-filter: 200
      sanitizing-filter: 300
      registry-channel-subchannel-filter: 400
  client:
    order:
      lists-brave-tracing-client-filter: 900
      metrics-filter: 850
      resilience-client-filter: 800
      oauth-filter: 701
      oauth-key-filter: 700

logging:
  mdc:
    enabled: true
    keys:
      - profile_id
      - x-api-id
    filter:
      path: /lists/**
resilience4j:
  circuit-breaker:
    failure-rate-threshold: 50            # failure rate threshold in percentage (default: 50)
    wait-duration-secs-in-open-state: 10  # time cb waits before transitioning from open to half-open (default: 60s)
    sliding-window-type: TIME_BASED       # possible values TIME_BASED or COUNT_BASED (default: COUNT_BASED)
    sliding-window-size: 100               # seconds for TIME_BASED, request-count for COUNT_BASED (default: 100)
    minimum-number-of-calls: 10            # min calls required (per sliding window period) before cb calculates error rate (default: 10)
    permitted-number-of-calls-in-half-open-state: 10  # min calls permitted when circuit breaker is half open
tracing:
  zipkin:
    enabled: false
    excluded-paths: /health
    b3-propagation-suppress: true
    sample-rate-percent: 0.5
    http:
      url: "https://zipkinserver.dev.target.com"
      messageMaxBytes: 50000
    app:
      name: backpack-registrychecklists
      env: dev
      region: tdc

list:
  list-type: REGISTRY
  max-count: 50
  max-pending-item-count: 100
  max-completed-items-count: 100
  abandon-after-duration-in-days: 730 # It is two years duration
  redsky-batch-size: 28
  features.dedupe: true
  features.sort-position: true
  features.fixed-default-list: false
  default-web-store-id: 3991

components:
  apispec:
    filepath: apispec/backpack-registrychecklists-v1.yml
  errocodes:
    classes:
      - com.tgt.lists.common.components.exception.BaseErrorCodes #Haven't defined app specific error codes yet
  server:
    onbehalf-filter:
      enabled: true
      gsp-validation-base-url: "https://backpackregistrychecklists.dev.target.com"
      team-email-ids:
        - Indrakumar.Thimmaiah@target.com
        - Kiran.Shivalingaiah@target.com
        - Parthasarathy.Hd@target.com
      approver-email-ids:
        - Indrakumar.Thimmaiah@target.com
    list-authorization-filter:
      enabled: false
      base-uri: /registry_checklists/v1
    id2-custom-scopes:
      names:
        - axiom.user
        - axiom.admin
        - axiom.leader
      profile-header: member_id
    registry-channel-subchannel-filter:
      base-uri: /registry_checklists/v1
    sanitizing-filter:
      enabled: true
msgbus:
  source: backpack-registrychecklists
  dlq-source: backpackregistrychecklists-dlq
  kafka:
    consumer:
      enabled: false
    producer:
      enabled: true
      client-id: backpack-registrychecklists-msg-bus-producer
    dlqconsumer:
      enabled: false
    dlqproducer:
      enabled: false
      client-id: backpack-registrychecklists-dlq-producer
    topic: registry-internal-data-bus-stage
    consumer-group: backpack-registrychecklists-msg-bus-consumer
    consumer-batch-size: 10
    dlq-topic: registry-internal-data-bus-stage-dlq
    dlq-consumer-group: backpack-registrychecklists-dlq-consumer
    dlq-event-retry-interval-secs: 1
    dlq-max-event-retry-count: 2
    dlq-consumer-batch-size: 10

kafka:
  bootstrap:
    servers: kafka-ttc-app.dev.target.com:9093
  ssl:
    endpoint.identification.algorithm: ""# disable karka broker cert's hostname verification
    keystore:
      location: /lists-bus-keystore.jks
      password: ${kafka-secret.keystore-password}
    truststore:
      location: /client-truststore.jks
      password: ${kafka-secret.truststore-password}
      type: PKCS12
  security:
    protocol: ssl
  producers:
    # default is a Jackson based JSON serializer for key/value
    backpack-registrychecklists-msg-bus-producer:
      key:
        serializer: org.apache.kafka.common.serialization.StringSerializer
      value:
        serializer: com.tgt.lists.msgbus.ListsJsonSerde
      compression:
        type: zstd
      retries: 3
      retry:
        backoff:
          ms: 1000
      max:
        in:
          flight:
            requests:
              per:
                connection: 1
        block:
          ms: 2000
