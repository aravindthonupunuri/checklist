swagger: '2.0'
info:
  version: 1.0.0
  title: backpack_registrychecklists-v1
  description: Api to get list of checklist items for a given registry type
host: api.target.com
schemes:
  - https
basePath: /registry_checklists/v1
produces:
  - application/json
consumes:
  - application/json
x-api-definition:
  api_name: registry_checklists-v1
  personnel:
    portfolio: Digital
    owner: Indrakumar.Thimmaiah
    development_team: Registries Team
    developers:
      - Shashi.Sharma
      - Parthasarathy.Hd
      - Kiran.Shivalingaiah
      - RAJESHKANNAN.BALU
      - Kundanam.Sreenivas
      - Lakshmi.A2
      - MohanaSundaram.A
      - Bhavya.Neelgar
      - Aravind.Thonupunuri
      - Gopika.Jayakumar
    enterprise_architect:
      - Maria.Brinas-Dobrowski
  compliance_designations:
    - None
  api_type: TENANT
  lifecycle_status: BUILD
  production_date: null
  retirement_date: null
  api_framework: Micronaut
  overall_data_classification: PUBLIC
  business_criticality: P2
  service_now_ci: CI02875146
  workload_placements:
    - where: core
      platform: tap
      proxy_pattern: side-car
  notification_ids:
    - description: ShuttleIO
      id: 'null'
    - description: slack
      id: GQ10ZD7UZ
  slack_channel_id: GQ10ZD7UZ
  nuid_ad_groups: null
  risk_rating: MEDIUM
  last_pentest_date: null
  links:
    issue_tracker: https://git.target.com/Registry-Modernization/backpack-registrychecklists/issues
    api_wiki_page: null
    code_repository: https://git.target.com/Registry-Modernization/backpack-registrychecklists
    ci_pipeline: https://git.target.com/Registry-Modernization/backpack-registrychecklists
    documentation_links:
      - https://git.target.com/Registry-Modernization/backpack-registrychecklists/blob/master/README.md
    logging_link:
      - http://platform.logging.target.com/goto/b6dc02a192efa17b59c15e539143ecaf
    metrics_link:
      - https://visualize.target.com/d/KXWja4RMk/target-platform-metrics-backpackregistry?orgId=1
    monitoring_link:
      - https://www.thalamus.target.com
    support_team_contact: TargetIndia-TTS-GRWS-Dev@Target.com
    api_spec: https://git.target.com/Registry-Modernization/backpack-registrychecklists/blob/master/api-spec/backpack-registrychecklists-v1.yml
  endpoints:
    external:
      production: https://api.target.com/registry_checklists/v1
      stage: https://stage-api.target.com/registry_checklists/v1
      qa: null
      ci: null
    internal:
      production: https://api-internal.target.com/registry_checklists/v1
      stage: https://stgapi-internal.target.com/registry_checklists/v1
      qa: null
      ci: null
securityDefinitions:
  gsp_oauth:
    type: oauth2
    authorizationUrl: 'http://gsp.target.com/gsp/oauth_tokens/v2/keys/'
    flow: implicit
    scopes: {}
paths:
  '/checklists':
    x-data_classification: PUBLIC
    post:
      x-incident_priority: P4
      x-response_time_sla: 800ms
      x-success_http_code: '204'
      x-expected_tps: '100'
      summary: Upload a checklist template
      description: Upload a checklist template
      tags:
        - checklists
      consumes:
        - multipart/form-data
      parameters:
        - name: Authorization
          in: header
          description: bearer token
          required: true
          type: string
          format: string
          default: Bearer
        - name: key
          in: query
          description: The consumer's valid API key.
          required: true
          type: string
        - name: registry_type
          in: query
          description: The registry type for which checklist will be used
          enum: [ "BABY", "WEDDING"]
          required: true
          type: string
        - name: channel
          in: query
          description: registry channel
          required: true
          type: string
          enum: [ "WEB", "MOBILE", "STORE" ]
        - name: sub_channel
          in: query
          description: registry subchannel
          required: true
          type: string
          enum: [ "KIOSK", "SCANNER", "TGTWEB", "GRIPHAPP", "GRANDAPP", "SPARTA" ]
        - name: location_id
          in: query
          description: The store id
          required: true
          type: integer
          format: int32
        - name: checklist_name
          in: query
          description: checklist name
          type: string
        - name: template_id
          in: query
          description: template id
          type: integer
        - in: formData
          name: checklist_file
          type: file
          description: The checklist XML file to upload.
      responses:
        '204':
          description: registry checklist file uploaded
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error404'

    delete:
      x-incident_priority: P4
      x-response_time_sla: 800ms
      x-success_http_code: '200'
      x-expected_tps: '100'
      summary: Delete a checklist template
      description: Delete a checklist template
      tags:
        - checklists
      consumes:
        - multipart/form-data
      parameters:
        - name: Authorization
          in: header
          description: bearer token
          required: true
          type: string
          format: string
          default: Bearer
        - name: key
          in: query
          description: The consumer's valid API key.
          required: true
          type: string
        - name: template_id
          in: query
          description: The checklist's template id
          required: true
          type: string
        - name: channel
          in: query
          description: registry channel
          required: true
          type: string
          enum: [ "WEB", "MOBILE", "STORE" ]
        - name: sub_channel
          in: query
          description: registry subchannel
          required: true
          type: string
          enum: [ "KIOSK", "SCANNER", "TGTWEB", "GRIPHAPP", "GRANDAPP", "SPARTA" ]
        - name: location_id
          in: query
          description: The store id
          required: true
          type: integer
          format: int32

      responses:
        '204':
          description: registry checklist deleted
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error404'
    get:
      x-incident_priority: P4
      x-response_time_sla: 800ms
      x-success_http_code: '200'
      x-expected_tps: '100'
      summary: Get all checklist templates for a registry type
      description: Get all checklist templates for a registry type
      tags:
        - checklists
      consumes:
        - multipart/form-data
      parameters:
        - name: Authorization
          in: header
          description: bearer token
          required: true
          type: string
          format: string
          default: Bearer
        - name: key
          in: query
          description: The consumer's valid API key.
          required: true
          type: string
        - name: registry_type
          in: query
          description: The registry type for which checklist will be used
          enum: [ "BABY", "WEDDING"]
          required: true
          type: string
        - name: channel
          in: query
          description: registry channel
          required: true
          type: string
          enum: [ "WEB", "MOBILE", "STORE" ]
        - name: sub_channel
          in: query
          description: registry subchannel
          required: true
          type: string
          enum: [ "KIOSK", "SCANNER", "TGTWEB", "GRIPHAPP", "GRANDAPP", "SPARTA" ]
        - name: location_id
          in: query
          description: The store id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: registry checklist transfer object
          schema:
            $ref: '#/definitions/RegistryChecklistTemplateResponseTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error404'
  '/{registry_id}/checklists':
    x-data_classification: PUBLIC
    get:
      x-incident_priority: P4
      x-response_time_sla: 800ms
      x-success_http_code: '200'
      x-expected_tps: '100'
      summary: Get registry checklists
      description: Api to get list of checklist items for a given registry type
      tags:
        - checklists
      parameters:
        - name: Authorization
          in: header
          description: bearer token
          required: true
          type: string
          format: string
          default: Bearer
        - name: key
          in: query
          description: The consumer's valid API key.
          required: true
          type: string
        - name: channel
          in: query
          description: registry channel
          required: true
          type: string
          enum: [ "WEB", "MOBILE", "STORE" ]
        - name: sub_channel
          in: query
          description: registry subchannel
          required: true
          type: string
          enum: [ "KIOSK", "SCANNER", "TGTWEB", "GRIPHAPP", "GRANDAPP", "SPARTA" ]
        - name: location_id
          in: query
          description: The store id
          required: true
          type: integer
          format: int32
        - name: registry_id
          in: path
          description: registry id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: registry checklist transfer object
          schema:
            $ref: '#/definitions/ChecklistResponseTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error404'
    put:
      x-incident_priority: P4
      x-response_time_sla: 800ms
      x-success_http_code: '200'
      x-expected_tps: '100'
      summary: Change default checklist template
      description: Api to change default checklist for a given registry_id
      tags:
        - checklists
      parameters:
        - name: Authorization
          in: header
          description: bearer token
          required: true
          type: string
          format: string
          default: Bearer
        - name: key
          in: query
          description: The consumer's valid API key.
          required: true
          type: string
        - name: channel
          in: query
          description: registry channel
          required: true
          type: string
          enum: [ "WEB", "MOBILE", "STORE" ]
        - name: sub_channel
          in: query
          description: registry subchannel
          required: true
          type: string
          enum: [ "KIOSK", "SCANNER", "TGTWEB", "GRIPHAPP", "GRANDAPP", "SPARTA" ]
        - name: location_id
          in: query
          description: The store id
          required: true
          type: integer
          format: int32
        - name: registry_id
          in: path
          description: registry id
          required: true
          type: string
          format: uuid
        - name: checklist_request
          in: body
          description: registry checklist update request  body
          schema:
            $ref: '#/definitions/RegistryChecklistRequestTO'
      responses:
        '200':
          description: registry checklist transfer object
          schema:
            $ref: '#/definitions/ChecklistResponseTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error404'

  '/{registry_id}/checklists/{checklist_id}':
    x-data_classification: PUBLIC
    post:
      x-incident_priority: P4
      x-response_time_sla: 800ms
      x-success_http_code: '200'
      x-expected_tps: '100'
      summary: Mark checklist's taxanomy as seen
      description: Mark checklist's taxanomy as seen
      tags:
        - checklists
      parameters:
        - name: Authorization
          in: header
          description: bearer token
          required: true
          type: string
          format: string
          default: Bearer
        - name: registry_id
          in: path
          description: registry id
          required: true
          type: string
          format: uuid
        - name: checklist_id
          in: path
          description: checklist id
          required: true
          type: string
        - name: key
          in: query
          description: The consumer's valid API key.
          required: true
          type: string
        - name: channel
          in: query
          description: registry channel
          required: true
          type: string
          enum: [ "WEB", "MOBILE", "STORE" ]
        - name: sub_channel
          in: query
          description: registry subchannel
          required: true
          type: string
          enum: [ "KIOSK", "SCANNER", "TGTWEB", "GRIPHAPP", "GRANDAPP", "SPARTA" ]
        - name: location_id
          in: query
          description: The store id
          required: true
          type: integer
          format: int32
        - name: checklist_request
          in: body
          description: registry checklist request  body
          schema:
            $ref: '#/definitions/RegistryChecklistRequestTO'
      responses:
        '200':
          description: registry checklist transfer object
          schema:
            $ref: '#/definitions/RegistryChecklistResponseTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error404'

    delete:
      x-incident_priority: P4
      x-response_time_sla: 800ms
      x-success_http_code: '200'
      x-expected_tps: '100'
      summary: Unmark checklist's taxanomy as seen
      description: Unmark checklist's taxanomy as seen
      tags:
        - checklists
      parameters:
        - name: Authorization
          in: header
          description: bearer token
          required: true
          type: string
          format: string
          default: Bearer
        - name: registry_id
          in: path
          description: registry id
          required: true
          type: string
          format: uuid
        - name: checklist_id
          in: path
          description: checklist id
          required: true
          type: string
        - name: template_id
          in: query
          description: template id
          required: true
          type: string
        - name: key
          in: query
          description: The consumer's valid API key.
          required: true
          type: string
        - name: channel
          in: query
          description: registry channel
          required: true
          type: string
          enum: [ "WEB", "MOBILE", "STORE" ]
        - name: sub_channel
          in: query
          description: registry subchannel
          required: true
          type: string
          enum: [ "KIOSK", "SCANNER", "TGTWEB", "GRIPHAPP", "GRANDAPP", "SPARTA" ]
        - name: location_id
          in: query
          description: The store id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: registry checklist transfer object
          schema:
            $ref: '#/definitions/RegistryChecklistResponseTO'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error400'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error401'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/Error403'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/Error404'



definitions:
  RegistryChecklistRequestTO:
    type: object
    required:
      - template_id
    properties:
      template_id:
        type: integer

  ChecklistResponseTO:
    type: object
    properties:
      registry_id:
        type: string
        format: uuid
      registry_item_count:
        type: integer
        format: int32
      template_id:
        type: integer
      categories:
        type: array
        items:
          $ref: '#/definitions/ChecklistCategoryTO'

  ChecklistCategoryTO:
    type: object
    properties:
      category_id:
        type: string
      category_name:
        type: string
      category_display_order:
        type: integer
      category_image_url:
        type: string
      subcategories:
        type: array
        items:
          $ref: '#/definitions/SubcategoryTO'

  SubcategoryTO:
    type: object
    properties:
      checklist_id:
        type: integer
      subcategory_child_ids:
        type: string
      subcategory_name:
        type: string
      subcategory_display_order:
        type: integer
      subcategory_url:
        type: string
      plp_param:
        type: string
      item_count:
        type: integer
        format: int32
      checked:
        type: boolean
      last_updated_item:
        $ref: '#/definitions/ItemDetailsTO'
  ItemDetailsTO:
    type: object
    properties:
      tcin:
        type: string
      description:
        type: string
      image_url:
        type: string
      added_ts:
        type: string
        format: date-time
      last_modified_ts:
        type: string
        format: date-time

  RegistryChecklistResponseTO:
    type: object
    properties:
      registry_id:
        type: string
        format: uuid
      checklist_id:
        type: integer
      template_id:
        type: integer
      checked:
        type: boolean
        example: true or false

  RegistryChecklistTemplateResponseTO:
    type: object
    properties:
      registry_type:
        $ref: '#/definitions/RegistryType'
      checklists:
        type: array
        items:
          $ref: '#/definitions/ChecklistTemplateTO'

  RegistryType:
    type: string
    enum:
      - BABY
      - WEDDING

  ChecklistTemplateTO:
    type: object
    properties:
      template_id:
        type: integer
      checklist_name:
        type: string

  Void:
    type: object

  Error401:
    type: object
    properties:
      message:
        type: string
        description: Authentication credentials were missing or incorrect
        example: Unauthorized
  Error400:
    type: object
    properties:
      message:
        type: string
        description: Invalid Request
        example: Bad Request
  Error403:
    type: object
    properties:
      message:
        type: string
        description: Forbidden Request
        example: Bad Request
  Error404:
    type: object
    properties:
      message:
        type: string
        description: URL requested is invalid or the resource requested does not exist
        example: Not Found
